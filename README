A simple single-header-only c++ library for reading in various settings from text files.

The text file must specify key/value pairs separated by the '=' sign, e.g.:

    key1 = a_value

Values can be numbers, strings, arrays of numbers or arrays of strings:

    stringKey = some_word

    numericKey = 1e-4

    arrayOfNumbers = [1,3,5e-3]

    arrayOfText = [first, second, third , 4] 

Comments can be insterted following the '#' character.


Use:

1. include the "reader.h" file.

2. Create a reader object: 
	Reader reader;

3. Read a text file: 
	reader.readSettings("test.txt");

4. Read in values :

    try {
	string s = reader.getValueByKey<string>("stringKey");
	std::vector<float> = reader.getValueByKey<std::vector<float>>("arrayOfNumbers"); 

	if (reader.containsKey("OptionalKey) ){
	    int optionalInt = reader.getValueByKey<int>("OptionalInt");
	}

    }catch(ReaderError e){
	e.printError();
    }
 

Exceptions will be thrown when things don't work out. For example when trying to
read incompaible types. The thrown exception contains in addition to a convenience
print method:
	1. Readon of exception.
	2. name of input file..
	3. line number in input file causing the exception.
